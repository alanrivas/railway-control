name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "20"
  REGISTRY: docker.io

jobs:
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🧪 Run tests
        run: echo "Tests would run here when test framework is configured"
        # Uncomment when tests are available:
        # run: npm test

      - name: 📊 Upload coverage reports
        run: echo "Coverage upload would happen here"
        # Uncomment when coverage is available:
        # uses: codecov/codecov-action@v3

  build:
    name: 🏗️ Build & Test Docker
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build development image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.dev
          push: false
          tags: railway-control:dev
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🏗️ Build production image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: railway-control:prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🧪 Test production image
        run: |
          docker run -d -p 8080:80 --name test-container railway-control:prod
          sleep 10
          curl -f http://localhost:8080 || exit 1
          docker stop test-container
          docker rm test-container

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: railway-control:prod
          format: "sarif"
          output: "trivy-results.sarif"

      - name: 📊 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  deploy-dev:
    name: 🚀 Deploy to Development
    needs: [test, build]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Login to Docker Hub
        uses: docker/login-action@v3
        continue-on-error: true
        with:
          # Note: Configure DOCKER_HUB_USERNAME and DOCKER_HUB_TOKEN secrets in repository settings
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: 🏗️ Build and push dev image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            # Note: Replace with your Docker Hub username
            ${{ secrets.DOCKER_HUB_USERNAME }}/railway-control:dev-${{ github.sha }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/railway-control:dev-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🚀 Deploy to Azure Web App (Dev)
        uses: azure/webapps-deploy@v2
        continue-on-error: true
        with:
          # Note: Configure AZURE_WEBAPP_NAME and AZURE_PUBLISH_PROFILE_DEV secrets in repository settings
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}-dev
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_DEV }}
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/railway-control:dev-${{ github.sha }}

      - name: ✅ Deployment complete
        run: |
          echo "🎉 Development deployment complete!"
          echo "🌐 Available at: https://${{ secrets.AZURE_WEBAPP_NAME }}-dev.azurewebsites.net"
